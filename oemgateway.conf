# OemGateway Configuration file example
# Copy this as oemgateway.conf (or any custom name) and edit settings

# Each listener and each buffer has 
# - a [[name]]: a unique string
# - a type: the name of the class it instantiates
# - a set of init_settings (depends on the type)
# - a set of runtime_settings (depends on the type)
# Both init_settings and runtime_settings sections must be defined, 
# even if empty. Init settings are used at initialization, and runtime
# settings are refreshed on a regular basis.

# All lines beginning with a '#' are comments and can be safely removed.

####################
# Gateway settings #
####################
[gateway]
# loglevel must be one of DEBUG, INFO, WARNING, ERROR, and CRITICAL
# see here : http://docs.python.org/2/library/logging.html
loglevel = DEBUG

#############
# Listeners #
#############
[listeners]

# This listener manages the sensor node
#[[Node_1]]
#    type = OemGatewaySerialListener
#    [[[init_settings]]]
#        com_port = /dev/tty.usbserial-A602SIUH
#    [[[runtime_settings]]]

[[Meter_EG]]
    type = OemGatewaySmartMeterListener
    [[[init_settings]]]
        com_port = /dev/tty.Bluetooth-Incoming-Port
        option_select = \0006050\r\n
        obis_codes = [ 1.8.0, 2.8.0 ]
        id = 2
    [[[runtime_settings]]] 

###########
# Buffers #
###########
[buffers]

# The two following buffers instantiate the same class, 
# that formats the data for an emoncms instance.
# One sends the data to a local instance, the other one
# to a distant one.
# If active is set to False, the buffer neither records nor sends any data,
# but it holds unsent data until active becomes True.
[[emoncms_local]]
    type = OemGatewayEmoncmsBuffer
    [[[init_settings]]]
    [[[runtime_settings]]]
        domain = 10.0.1.23
        apikey = 907699bbfa6aaaf7cac4f671b93bd61e
        protocol = http://
        active = True
        path = /emoncms

